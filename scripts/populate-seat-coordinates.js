// scripts/populate-seat-coordinates.js

/*
 * =============================================================================
 * –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç –≤–∞—à—É –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
 * –°–¥–µ–ª–∞–π—Ç–µ –±—ç–∫–∞–ø –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º, –µ—Å–ª–∏ –≤—ã –Ω–µ —É–≤–µ—Ä–µ–Ω—ã –≤ —Å–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö.
 * =============================================================================
 *
 * –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:
 * 1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: `npm install @supabase/supabase-js dotenv`
 * 2. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `.env` –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç.
 * 3. –î–æ–±–∞–≤—å—Ç–µ –≤ `.env` –≤–∞—à–∏ –∫–ª—é—á–∏ Supabase:
 *    SUPABASE_URL=https://xxxxxxxx.supabase.co
 *    SUPABASE_SERVICE_KEY=ey...
 * 4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: –í –æ–±—ä–µ–∫—Ç–µ `zoneLayouts` –Ω–∏–∂–µ, –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
 *    –º–µ—Å—Ç –¥–ª—è –∫–∞–∂–¥–æ–π –∑–æ–Ω—ã. `x` –∏ `y` - —ç—Ç–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ü–µ–Ω—Ç—Ä–∞ –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—Ç–∞.
 *    –Ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –ø—Ä–∏–º–µ—Ä –¥–ª—è –∑–æ–Ω—ã '201'. –í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Ç–æ –∂–µ —Å–∞–º–æ–µ
 *    –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–æ–Ω (202-213).
 * 5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç: `node scripts/populate-seat-coordinates.js`
 * 6. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞, —É–¥–∞–ª–∏—Ç–µ –µ–≥–æ –∏–ª–∏ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ,
 *    —á—Ç–æ–±—ã —Å–ª—É—á–∞–π–Ω–æ –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–Ω–æ–≤–∞.
 */

require("dotenv").config()
const { createClient } = require("@supabase/supabase-js")

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = process.env.SUPABASE_URL
const supabaseKey = process.env.SUPABASE_SERVICE_KEY
const supabase = createClient(supabaseUrl, supabaseKey)

// =============================================================================
// –ù–ê–°–¢–†–û–ô–ö–ê –ö–û–û–†–î–ò–ù–ê–¢ –ú–ï–°–¢
// =============================================================================
// –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∑–¥–µ—Å—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –º–µ—Å—Ç –¥–ª—è –∫–∞–∂–¥–æ–π –∑–æ–Ω—ã.
// `zoneId` –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å `id` –≤ –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü–µ `zones`.
// –î–ª—è –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—Ç–∞ `row` –∏ `seat` –¥–æ–ª–∂–Ω—ã —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ `seats`.
const zoneLayouts = {
  // --- –ü–†–ò–ú–ï–† –î–õ–Ø –ó–û–ù–´ 201 ---
  // –î–æ–ø—É—Å—Ç–∏–º, –≤ –∑–æ–Ω–µ 201 –µ—Å—Ç—å 2 —Ä—è–¥–∞ –ø–æ 5 –º–µ—Å—Ç.
  // –í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —ç—Ç–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–¥ –≤–∞—à—É —Ä–µ–∞–ª—å–Ω—É—é —Å—Ö–µ–º—É.
  "201": [
    // –†—è–¥ 1
    { row: 1, seat: 1, x: 30, y: 30 },
    { row: 1, seat: 2, x: 50, y: 30 },
    { row: 1, seat: 3, x: 70, y: 30 },
    { row: 1, seat: 4, x: 90, y: 30 },
    { row: 1, seat: 5, x: 110, y: 30 },
    // –†—è–¥ 2
    { row: 2, seat: 1, x: 30, y: 50 },
    { row: 2, seat: 2, x: 50, y: 50 },
    { row: 2, seat: 3, x: 70, y: 50 },
    { row: 2, seat: 4, x: 90, y: 50 },
    { row: 2, seat: 5, x: 110, y: 50 },
  ],

  // --- –î–û–ë–ê–í–¨–¢–ï –ó–î–ï–°–¨ –î–ê–ù–ù–´–ï –î–õ–Ø –î–†–£–ì–ò–• –ó–û–ù ---
  "202": [
    // { row: 1, seat: 1, x: 30, y: 30 },
  ],
  "203": [],
  // ... –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ –¥–ª—è –≤—Å–µ—Ö –∑–æ–Ω 204-213
};

// =============================================================================
// –õ–û–ì–ò–ö–ê –°–ö–†–ò–ü–¢–ê (–Ω–µ —Ç—Ä–æ–≥–∞—Ç—å)
// =============================================================================

async function updateSeatCoordinates() {
  console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –º–µ—Å—Ç...")

  for (const zoneId in zoneLayouts) {
    const seatsToUpdate = zoneLayouts[zoneId]
    if (seatsToUpdate.length === 0) {
      console.log(`üü° –ó–æ–Ω–∞ ${zoneId}: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.`);
      continue
    }

    console.log(`\nüîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∑–æ–Ω—É ${zoneId}...`);

    // –ü–æ–ª—É—á–∞–µ–º ID –≤—Å–µ—Ö –º–µ—Å—Ç –¥–ª—è –¥–∞–Ω–Ω–æ–π –∑–æ–Ω—ã, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    const { data: existingSeats, error: fetchError } = await supabase
      .from("seats")
      .select("id, row_number, seat_number")
      .eq("zone_id", zoneId)

    if (fetchError) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–µ—Å—Ç –¥–ª—è –∑–æ–Ω—ã ${zoneId}:`, fetchError.message)
      continue
    }
    
    const updates = []
    for (const seatLayout of seatsToUpdate) {
        const matchingSeat = existingSeats.find(
            s => s.row_number === seatLayout.row && s.seat_number === seatLayout.seat
        )

        if(matchingSeat) {
            updates.push({
                id: matchingSeat.id,
                x_coordinate: seatLayout.x,
                y_coordinate: seatLayout.y,
            })
        } else {
            console.warn(`    ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ú–µ—Å—Ç–æ (—Ä—è–¥ ${seatLayout.row}, –Ω–æ–º–µ—Ä ${seatLayout.seat}) –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ë–î –¥–ª—è –∑–æ–Ω—ã ${zoneId}.`)
        }
    }

    if (updates.length > 0) {
        const { error: updateError } = await supabase.from("seats").upsert(updates)

        if (updateError) {
            console.error(`    ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ ${updates.length} –º–µ—Å—Ç –≤ –∑–æ–Ω–µ ${zoneId}:`, updateError.message);
        } else {
            console.log(`    ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ ${updates.length} –º–µ—Å—Ç –≤ –∑–æ–Ω–µ ${zoneId}.`)
        }
    } else {
        console.log(`    ‚ÑπÔ∏è –î–ª—è –∑–æ–Ω—ã ${zoneId} –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–∞—é—â–∏—Ö –º–µ—Å—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.`);
    }
  }
  
  console.log("\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ!");
}

updateSeatCoordinates().catch(console.error) 